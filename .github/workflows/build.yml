name: build system configurations with nix
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
permissions: {}
jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: Check modified files
    outputs:
      nixos-changed: ${{ steps.changed-files.outputs.nixos_any_changed == 'true' }}
      darwin-changed: ${{ steps.changed-files.outputs.darwin_any_changed == 'true' }}
      aqua-changed: ${{ steps.changed-files.outputs.aqua_any_changed == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Get all changed files
        id: changed-files
        uses: tj-actions/changed-files@v47
        with:
          files_yaml: |
            nixos:
              - flake.lock
              - flake.nix
              - home-manager/**
              - '!home-manager/darwin/**'
              - '!home-manager/profiles/asu/**'
              - nixos/**
              - profiles/**
              - '!profiles/asu/**'
              - secrets/**
              - '.github/workflows/build.yml'
              - 'Makefile'
            darwin:
              - flake.lock
              - flake.nix
              - home-manager/**
              - '!home-manager/linux/**'
              - '!home-manager/hyprland/**'
              - '!home-manager/fcitx5/**'
              - '!home-manager/profiles/mafu/**'
              - '!home-manager/profiles/nacho/**'
              - '!home-manager/profiles/rika/**'
              - '!home-manager/profiles/saki/**'
              - '!home-manager/profiles/unyonyo/**'
              - '!home-manager/profiles/xanadu/**'
              - '!home-manager/profiles/yuki/**'
              - nix-darwin/**
              - profiles/asu/**
              - secrets/**
              - '.github/workflows/build.yml'
              - 'Makefile'
            aqua:
              - aqua/**
              - '.github/workflows/build.yml'
            
  nixos-build:
    runs-on: [self-hosted, X64, Linux, nix]
    name: Build NixOS configuration for nacho
    needs: changed-files
    if: needs.changed-files.outputs.nixos-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Adding Nix PATH
        run: |
          echo "/nix/var/nix/profiles/default/bin" >> "$GITHUB_PATH"
          echo "$HOME/.nix-profile/bin" >> "$GITHUB_PATH"
      - name: Check nix installation
        run: |
          make RUNS_ENV=ci test
      - name: Clean Nix Store
        run: |
          make RUNS_ENV=ci clean-store
      - name: build
        run: |
          make RUNS_ENV=ci ci-build
          df -h

  darwin-build:
    runs-on: macos-26
    name: Build darwin configuration
    needs: changed-files
    if: needs.changed-files.outputs.darwin-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install nix
        uses: cachix/install-nix-action@v31
      - name: Setup cachix
        uses: cachix/cachix-action@v16
        with:
          name: nanamiiiii
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Create /run for darwin
        run: |
          printf "run\tprivate/var/run\n" | sudo tee -a /etc/synthetic.conf
          /System/Library/Filesystems/apfs.fs/Contents/Resources/apfs.util -t || true
      - name: Build
        run: |
          make RUNS_ENV=ci ci-build
          df -h

  cachix-deploy:
    runs-on: macos-26
    name: Deploy darwin configuration
    needs: darwin-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install nix
        uses: cachix/install-nix-action@v31
      - name: Setup cachix
        uses: cachix/cachix-action@v16
        with:
          name: nanamiiiii
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Deploy
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          spec=$(nix build ".#cachix-deploy" --accept-flake-config --print-out-paths)
          cachix push nanamiiiii "$spec"
          cachix deploy activate "$spec" --async

  aqua-checksum-update:
    needs: changed-files
    if: needs.changed-files.outputs.aqua-changed == 'true'
    runs-on: ubuntu-latest
    permissions: {}
    timeout-minutes: 15
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install aqua
        uses: aquaproj/aqua-installer@ea518c135a02fc11ff8024364510c181a5c6b342 # v4.0.3
        with:
          aqua_version: v2.43.0
      - name: Fix aqua-checksums.json
        run: aqua upc -prune
      - name: Run autofix.ci
        uses: autofix-ci/action@635ffb0c9798bd160680f18fd73371e355b85f27 # v1.3.2
